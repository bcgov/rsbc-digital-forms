"""empty message

Revision ID: 413494097c2f
Revises: fff1bdd7ea3e
Create Date: 2023-06-30 12:25:58.238821

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '413494097c2f'
down_revision = 'fff1bdd7ea3e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('icbc_sent_status', sa.String(), nullable=True),
    sa.Column('driver_licence_no', sa.String(), nullable=True),
    sa.Column('driver_jurisdiction', sa.String(), nullable=True),
    sa.Column('driver_last_name', sa.String(), nullable=True),
    sa.Column('driver_given_name', sa.String(), nullable=True),
    sa.Column('driver_dob', sa.DateTime(), nullable=True),
    sa.Column('driver_address', sa.String(), nullable=True),
    sa.Column('driver_city', sa.String(), nullable=True),
    sa.Column('driver_prov', sa.String(), nullable=True),
    sa.Column('driver_postal', sa.String(), nullable=True),
    sa.Column('driver_phone', sa.String(), nullable=True),
    sa.Column('vehicle_jurisdiction', sa.String(), nullable=True),
    sa.Column('vehicle_plate_no', sa.String(), nullable=True),
    sa.Column('vehicle_registration_no', sa.String(), nullable=True),
    sa.Column('vehicle_year', sa.String(), nullable=True),
    sa.Column('vehicle_mk_md', sa.String(), nullable=True),
    sa.Column('vehicle_style', sa.String(), nullable=True),
    sa.Column('vehicle_colour', sa.String(), nullable=True),
    sa.Column('vehicle_vin_no', sa.String(), nullable=True),
    sa.Column('nsc_prov_state', sa.String(), nullable=True),
    sa.Column('nsc_no', sa.String(), nullable=True),
    sa.Column('owned_by_corp', sa.Boolean(), nullable=True),
    sa.Column('corporation_name', sa.String(), nullable=True),
    sa.Column('regist_owner_last_name', sa.String(), nullable=True),
    sa.Column('regist_owner_first_name', sa.String(), nullable=True),
    sa.Column('regist_owner_address', sa.String(), nullable=True),
    sa.Column('regist_owner_dob', sa.DateTime(), nullable=True),
    sa.Column('regist_owner_city', sa.String(), nullable=True),
    sa.Column('regist_owner_prov', sa.String(), nullable=True),
    sa.Column('regist_owner_postal', sa.String(), nullable=True),
    sa.Column('regist_owner_phone', sa.Integer(), nullable=True),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_guid'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('irp_form',
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.PrimaryKeyConstraint('form_id')
    )
    op.create_table('twelve_hour_form',
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.PrimaryKeyConstraint('form_id')
    )
    op.create_table('twenty_four_hour_form',
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('vehicle_impounded', sa.Boolean(), nullable=True),
    sa.Column('reason_for_not_impounding', sa.String(), nullable=True),
    sa.Column('vehicle_released_to', sa.String(), nullable=True),
    sa.Column('date_released', sa.DateTime(), nullable=True),
    sa.Column('time_released', sa.String(), nullable=True),
    sa.Column('location_of_keys', sa.String(), nullable=True),
    sa.Column('impound_lot_operator', sa.String(), nullable=True),
    sa.Column('type_of_prohibition', sa.String(), nullable=True),
    sa.Column('intersection_or_address_of_offence', sa.String(), nullable=True),
    sa.Column('offence_city', sa.String(), nullable=True),
    sa.Column('agency_file_no', sa.String(), nullable=True),
    sa.Column('date_of_driving', sa.DateTime(), nullable=True),
    sa.Column('time_of_driving', sa.String(), nullable=True),
    sa.Column('reasonable_ground', sa.String(), nullable=True),
    sa.Column('reasonable_ground_other', sa.String(), nullable=True),
    sa.Column('prescribed_test_used', sa.Boolean(), nullable=True),
    sa.Column('date_of_test', sa.DateTime(), nullable=True),
    sa.Column('time_of_test', sa.String(), nullable=True),
    sa.Column('reason_for_not_using_prescribed_test', sa.String(), nullable=True),
    sa.Column('test_used_alcohol', sa.String(), nullable=True),
    sa.Column('asd_expiry_date', sa.DateTime(), nullable=True),
    sa.Column('result_alcohol', sa.String(), nullable=True),
    sa.Column('bac_result_mg', sa.Integer(), nullable=True),
    sa.Column('test_used_drugs', sa.String(), nullable=True),
    sa.Column('test_result_drugs', sa.String(), nullable=True),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.PrimaryKeyConstraint('form_id')
    )
    op.create_table('vi_form',
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('created_dt', sa.DateTime(), nullable=True),
    sa.Column('updated_dt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.PrimaryKeyConstraint('form_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vi_form')
    op.drop_table('twenty_four_hour_form')
    op.drop_table('twelve_hour_form')
    op.drop_table('irp_form')
    op.drop_table('event')
    # ### end Alembic commands ###
