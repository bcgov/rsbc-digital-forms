"""empty message

Revision ID: b4b054d65515
Revises: 25ad6d340253
Create Date: 2023-12-02 10:14:10.698228

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b4b054d65515'
down_revision = '25ad6d340253'
branch_labels = None
depends_on = None

new_data = [
  {
    "df_unique_code": "BACWARN3",
    "impound_reason_name": "3-day IRP (Warn)",
    "vips_value_cd": "BACWARN3",
    "vips_value_dsc": "3-day Immediate Roadside Prohibition - BAC WARN",
    "vips_value_abbreviated_dsc": "3-DAY IRP - BAC WARN"
  },
  {
    "df_unique_code": "BACWARN30",
    "impound_reason_name": "30-day IRP (Warn)",
    "vips_value_cd": "BACWARN30",
    "vips_value_dsc": "30-day Immediate Roadside Prohibition - BAC WARN",
    "vips_value_abbreviated_dsc": "30-day IRP - BAC WARN"
  },
  {
    "df_unique_code": "BACWARN7",
    "impound_reason_name": "7-day IRP (Warn)",
    "vips_value_cd": "BACWARN7",
    "vips_value_dsc": "7-day Immediate Roadside Prohibition - BAC WARN",
    "vips_value_abbreviated_dsc": "7-day IRP - BAC WARN"
  },
  {
    "df_unique_code": "BACFAIL",
    "impound_reason_name": "90-day IRP (Fail or Refusal)",
    "vips_value_cd": "BACFAIL",
    "vips_value_dsc": "90-day Immediate Roadside Prohibition - BAC Fail or Refusal",
    "vips_value_abbreviated_dsc": "90-day IRP - BAC Fail/Refusal"
  },
  {
    "df_unique_code": "RACE",
    "impound_reason_name": "Street Racing",
    "vips_value_cd": "RACE",
    "vips_value_dsc": "Driven in a Race",
    "vips_value_abbreviated_dsc": "Driven in a Race"
  },
  {
    "df_unique_code": "STUNT",
    "impound_reason_name": "Stunt Driving",
    "vips_value_cd": "STUNT",
    "vips_value_dsc": "Driven in a Stunt",
    "vips_value_abbreviated_dsc": "Driven in a Stunt"
  },
  {
    "df_unique_code": "IDEPPROHIB",
    "impound_reason_name": "Prohibited",
    "vips_value_cd": "IDEPPROHIB",
    "vips_value_dsc": "Driving While Prohibited or Suspended",
    "vips_value_abbreviated_dsc": "Driving While Prohibited or Suspended"
  },
  {
    "df_unique_code": "IDEPUNLIC",
    "impound_reason_name": "Unlicensed",
    "vips_value_cd": "IDEPUNLIC",
    "vips_value_dsc": "Driving While Unlicenced",
    "vips_value_abbreviated_dsc": "Driving While Unlicensed"
  },
  {
    "df_unique_code": "MCUNLIC",
    "impound_reason_name": "Motorcycle (restrictions)",
    "vips_value_cd": "MCUNLIC",
    "vips_value_dsc": "Driving a Motorcycle While Unlic or Under-Lic - MVA s. 25(15)",
    "vips_value_abbreviated_dsc": "Driving Motorcycle While Unlic/Under-Lic"
  },
  {
    "df_unique_code": "EXSPEED",
    "impound_reason_name": "Excessive Speed",
    "vips_value_cd": "EXSPEED",
    "vips_value_dsc": "Excessive Speeding - MVA s. 148",
    "vips_value_abbreviated_dsc": "Excessive Speeding"
  },
  {
    "df_unique_code": "SITTING",
    "impound_reason_name": "Motorcycle (seating)",
    "vips_value_cd": "SITTING",
    "vips_value_dsc": "Not Sitting Properly on Motorcycle - MVA s. 194(1) or (2)",
    "vips_value_abbreviated_dsc": "Not Sitting Properly on Motorcycle"
  }
]

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('impound_reason_codes',
    sa.Column('df_unique_code', sa.String(), nullable=False),
    sa.Column('impound_reason_name', sa.String(), nullable=True),
    sa.Column('vips_value_cd', sa.String(), nullable=True),
    sa.Column('vips_value_dsc', sa.String(), nullable=True),
    sa.Column('vips_value_abbreviated_dsc', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('df_unique_code')
    )
    
    with op.get_context().autocommit_block():
        bind = op.get_bind()
        meta = sa.MetaData()
        meta.bind = bind
        meta.reflect(bind=bind, only=('impound_reason_codes',))
        impound_reason_codes = sa.Table('impound_reason_codes', meta)
        op.bulk_insert(impound_reason_codes, new_data)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('impound_reason_codes')
    # ### end Alembic commands ###
