name: ci-workflow

on:
  workflow_call:
    inputs:
      DOCKER_CONTEXT:
        required: true
        type: string
      DOCKER_FILE:
        required: true
        type: string
      DOCKER_IMAGE_NAME:
        # required: true
        type: string
      # OPENSHIFT_SERVER_URL_SILVER:
      #   required: true
      #   type: string
      # OPENSHIFT_SA_PIPELINE_TOKEN_SILVER:
      #   required: true
      #   type: string
      # OPENSHIFT_LICENSE_PLATE_SILVER:
      #   required: true
      #   type: string
    secrets:
      DOCKER_REGISTRY:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.DOCKER_CONTEXT }}
          file: ${{ inputs.DOCKER_FILE }}
          push: false
          load: true
          tags:  ${{ inputs.DOCKER_IMAGE_NAME }}:latest
      - name: Run Trivy vulnerability scanner- stdout
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        if: always()
        with:
          scan-type: image
          image-ref: ${{ inputs.DOCKER_IMAGE_NAME }}:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: CRITICAL
      - name: Run Trivy vulnerability scanner- save to file
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        if: always()
        with:
          scan-type: image
          image-ref: ${{ inputs.DOCKER_IMAGE_NAME }}:latest
          format: 'template'
          ignore-unfixed: true
          template: "@/contrib/html.tpl"
          output: trivy.html
          severity: CRITICAL
      - name: Run Trivy vulnerability scanner- save to sarif file
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        if: always()
        with:
          scan-type: image
          image-ref: ${{ inputs.DOCKER_IMAGE_NAME }}:latest
          format: 'template'
          ignore-unfixed: true
          template: "@/contrib/sarif.tpl"
          output: trivy.sarif
          severity: CRITICAL
      - name: Edit html file to clean headers
        if: always()
        run: |          
          sed '/<head/,/<\/head>/d' trivy.html >trivy_updated.html
          cat trivy_updated.html
      - name: Send results to Status
        if: always()
        run: |
          cat trivy_updated.html >> $GITHUB_STEP_SUMMARY   
      - uses: mshick/add-pr-comment@v2
        if: always()
        with:
          allow-repeats: true
          message-path: |
            trivy_updated.html
      - name: Post SARIF findings in the issue
        uses: sett-and-hive/sarif-to-issue-action@v1
        if: failure()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          branch: ${{ github.head_ref }}
          sarif-file: trivy.sarif
          title: "Critical vulnerabilities found in ${{ inputs.DOCKER_IMAGE_NAME }} on PR ${{ github.event.number }}"
          odc-sarif: false
      
      

  build:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      pull-requests: read
      checks: write
      issues: write
      statuses: write
      deployments: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.DOCKER_CONTEXT }}
          file: ${{ inputs.DOCKER_FILE }}
          push: false
