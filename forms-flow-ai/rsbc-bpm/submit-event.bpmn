<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1oubpmc" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.31.0" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.22.0">
  <bpmn:process id="digital_forms_events" name="Digital Forms Events" isExecutable="true" camunda:historyTimeToLive="P30D">
    <bpmn:startEvent id="StartEvent_1" name="start">
      <bpmn:outgoing>Flow_11aa80b</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:endEvent id="Event_0ts53jy" name="end">
      <bpmn:incoming>Flow_1kdbt5o</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_02ue293" sourceRef="submit_event" targetRef="Task_1hko8r7" />
    <bpmn:serviceTask id="submit_event" name="Submit Event">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="groovy">var system = java.lang.System;
system.getenv('REACT_APP_RSBC_API_URL')+"/api/v1/event"</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">${event}</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Authorization">Bearer ${token}</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="statusCode">#{statusCode}</camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
        <camunda:executionListener event="end">
          <camunda:script scriptFormat="JavaScript">if (statusCode != 201){
  throw new Error("Error from REST call, response Code: "+statusCode)
}else{
  console.log("successfully submit event to digital forms backend");
}</camunda:script>
        </camunda:executionListener>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0dibfen</bpmn:incoming>
      <bpmn:outgoing>Flow_02ue293</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_11aa80b" sourceRef="StartEvent_1" targetRef="Activity_153941x">
      <bpmn:extensionElements>
        <camunda:executionListener event="take">
          <camunda:script scriptFormat="javascript">execution.setVariable('applicationStatus', 'New');</camunda:script>
        </camunda:executionListener>
        <camunda:executionListener class="org.camunda.bpm.extension.hooks.listeners.ApplicationStateListener" event="take" />
        <camunda:executionListener class="org.camunda.bpm.extension.hooks.listeners.FormBPMJsonDataPipelineListener" event="take" />
      </bpmn:extensionElements>
    </bpmn:sequenceFlow>
    <bpmn:scriptTask id="Activity_1pvahuo" name="Transform Event Input" scriptFormat="groovy">
      <bpmn:incoming>Flow_0es6pgh</bpmn:incoming>
      <bpmn:outgoing>Flow_0dibfen</bpmn:outgoing>
      <bpmn:script>import groovy.json.JsonSlurper
import groovy.json.JsonOutput

// Get JSON string from execution variable
//def data = execution.getVariable("formData")
var formData = S(execution.getVariable("formData"));

// Remove the `currentUserRole` field
formData.deleteProp("currentUserRole");

execution.setVariable("event", formData.toString())</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_0dibfen" sourceRef="Activity_1pvahuo" targetRef="submit_event" />
    <bpmn:serviceTask id="Activity_153941x" name="Get OAuth Token">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="groovy">var system = java.lang.System;
system.getenv('KEYCLOAK_URL')+"/auth/realms/"+system.getenv('KEYCLOAK_URL_REALM')+"/protocol/openid-connect/token"</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">grant_type=client_credentials</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Authorization">${basicAuth64}</camunda:entry>
                <camunda:entry key="Content-Type">application/x-www-form-urlencoded</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="statusCode">#{statusCode}</camunda:outputParameter>
            <camunda:outputParameter name="response">#{response}</camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
        <camunda:executionListener event="end">
          <camunda:script scriptFormat="JavaScript">if (statusCode != 200){
  throw new Error("Error from OAuth token call, response Code: "+statusCode)
}else{
}</camunda:script>
        </camunda:executionListener>
        <camunda:inputOutput>
          <camunda:inputParameter name="basicAuth64">
            <camunda:script scriptFormat="groovy">import java.util.Base64

def clientId = System.getenv("KEYCLOAK_CLIENTID")
def clientSecret = System.getenv("KEYCLOAK_CLIENTSECRET")

def credentials = clientId + ":" + clientSecret
def encoded = Base64.encoder.encodeToString(credentials.bytes)

return "Basic " + encoded</camunda:script>
          </camunda:inputParameter>
          <camunda:outputParameter name="token">${S(response).prop("access_token").stringValue()}</camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_11aa80b</bpmn:incoming>
      <bpmn:outgoing>Flow_0es6pgh</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:task id="Task_1hko8r7" name="Update Application Status">
      <bpmn:extensionElements>
        <camunda:executionListener event="end">
          <camunda:script scriptFormat="javascript">execution.setVariable('applicationStatus', 'Submitted');</camunda:script>
        </camunda:executionListener>
        <camunda:executionListener class="org.camunda.bpm.extension.hooks.listeners.ApplicationStateListener" event="end" />
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_02ue293</bpmn:incoming>
      <bpmn:outgoing>Flow_1kdbt5o</bpmn:outgoing>
    </bpmn:task>
    <bpmn:sequenceFlow id="Flow_1kdbt5o" sourceRef="Task_1hko8r7" targetRef="Event_0ts53jy" />
    <bpmn:sequenceFlow id="Flow_0es6pgh" sourceRef="Activity_153941x" targetRef="Activity_1pvahuo" />
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="digital_forms_events">
      <bpmndi:BPMNShape id="StartEvent_1_di" bpmnElement="StartEvent_1">
        <dc:Bounds x="142" y="122" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="150" y="165" width="22" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_06lqfa2" bpmnElement="Activity_153941x">
        <dc:Bounds x="270" y="100" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0lm1zzi_di" bpmnElement="Activity_1pvahuo">
        <dc:Bounds x="440" y="100" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1j3xucw_di" bpmnElement="submit_event">
        <dc:Bounds x="590" y="100" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Task_0fde0ul_di" bpmnElement="Task_1hko8r7">
        <dc:Bounds x="740" y="100" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0ts53jy_di" bpmnElement="Event_0ts53jy">
        <dc:Bounds x="962" y="122" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="970" y="168" width="19" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_02ue293_di" bpmnElement="Flow_02ue293">
        <di:waypoint x="690" y="140" />
        <di:waypoint x="740" y="140" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_11aa80b_di" bpmnElement="Flow_11aa80b">
        <di:waypoint x="178" y="140" />
        <di:waypoint x="270" y="140" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0dibfen_di" bpmnElement="Flow_0dibfen">
        <di:waypoint x="540" y="140" />
        <di:waypoint x="590" y="140" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1kdbt5o_di" bpmnElement="Flow_1kdbt5o">
        <di:waypoint x="840" y="140" />
        <di:waypoint x="962" y="140" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0es6pgh_di" bpmnElement="Flow_0es6pgh">
        <di:waypoint x="370" y="140" />
        <di:waypoint x="440" y="140" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
